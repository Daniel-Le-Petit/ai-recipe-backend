const axios = require('axios');

const API_URL = 'http://localhost:1338/api';

// Sample categories
const categories = [
  {
    categoryName: 'Plats principaux',
    categoryDescription: 'Recettes de plats principaux pour le d√©jeuner ou le d√Æner'
  },
  {
    categoryName: 'Entr√©es',
    categoryDescription: 'Entr√©es et ap√©ritifs'
  },
  {
    categoryName: 'Desserts',
    categoryDescription: 'Desserts et p√¢tisseries'
  },
  {
    categoryName: 'Petit-d√©jeuner',
    categoryDescription: 'Recettes pour le petit-d√©jeuner'
  },
  {
    categoryName: 'Soupes',
    categoryDescription: 'Soupes et potages'
  }
];

// Sample recipes
const recipes = [
  {
    title: 'Poulet r√¥ti aux herbes',
    description: 'Un d√©licieux poulet r√¥ti avec des herbes fra√Æches et des l√©gumes',
    duration: 60,
    difficulty: 'Facile',
    servings: 4,
    recipeState: 'saved',
    instructions: '1. Pr√©chauffer le four √† 180¬∞C\n2. Assaisonner le poulet avec sel, poivre et herbes\n3. Placer dans un plat avec des l√©gumes\n4. Cuire 45-50 minutes',
    ingredients: 'Poulet entier, herbes de Provence, huile d\'olive, sel, poivre, carottes, oignons',
    rating: 4.5,
    tags: ['poulet', 'herbes', 'r√¥ti']
  },
  {
    title: 'Salade C√©sar',
    description: 'Une salade C√©sar classique avec une vinaigrette cr√©meuse',
    duration: 20,
    difficulty: 'Facile',
    servings: 2,
    recipeState: 'saved',
    instructions: '1. Laver et couper la laitue\n2. Pr√©parer la vinaigrette\n3. Ajouter les cro√ªtons et le parmesan\n4. M√©langer d√©licatement',
    ingredients: 'Laitue romaine, parmesan, cro√ªtons, anchois, huile d\'olive, citron, ail',
    rating: 4.2,
    tags: ['salade', 'v√©g√©tarien', 'rapide']
  },
  {
    title: 'Tiramisu classique',
    description: 'Le dessert italien par excellence avec caf√© et mascarpone',
    duration: 30,
    difficulty: 'Interm√©diaire',
    servings: 6,
    recipeState: 'saved',
    instructions: '1. Pr√©parer le caf√© fort\n2. Battre les jaunes avec le sucre\n3. Incorporer le mascarpone\n4. Monter les blancs en neige\n5. Alterner couches de biscuits et cr√®me',
    ingredients: 'Mascarpone, ≈ìufs, sucre, caf√© fort, biscuits √† la cuill√®re, cacao',
    rating: 4.8,
    tags: ['dessert', 'italien', 'caf√©']
  },
  {
    title: 'Omelette aux champignons',
    description: 'Une omelette moelleuse garnie de champignons saut√©s',
    duration: 15,
    difficulty: 'Facile',
    servings: 1,
    recipeState: 'saved',
    instructions: '1. Battre les ≈ìufs avec sel et poivre\n2. Sauter les champignons\n3. Verser les ≈ìufs dans la po√™le\n4. Plier l\'omelette',
    ingredients: '≈íufs, champignons, beurre, sel, poivre, persil',
    rating: 4.0,
    tags: ['petit-d√©jeuner', 'rapide', 'v√©g√©tarien']
  },
  {
    title: 'Soupe √† l\'oignon gratin√©e',
    description: 'Une soupe traditionnelle fran√ßaise avec du fromage gratin√©',
    duration: 90,
    difficulty: 'Interm√©diaire',
    servings: 4,
    recipeState: 'saved',
    instructions: '1. √âmincer les oignons finement\n2. Les faire caram√©liser √† feu doux\n3. Ajouter le bouillon et laisser mijoter\n4. Gratiner au four avec du fromage',
    ingredients: 'Oignons, bouillon de b≈ìuf, beurre, pain, gruy√®re, vin blanc',
    rating: 4.6,
    tags: ['soupe', 'fran√ßais', 'r√©confortant']
  }
];

async function createCategories() {
  console.log('Creating categories...');
  const createdCategories = [];
  
  for (const category of categories) {
    try {
      const response = await axios.post(`${API_URL}/recipie-categories`, {
        data: category
      });
      createdCategories.push(response.data.data);
      console.log(`‚úÖ Created category: ${category.categoryName}`);
    } catch (error) {
      console.error(`‚ùå Error creating category ${category.categoryName}:`, error.response?.data || error.message);
    }
  }
  
  return createdCategories;
}

async function createRecipes(categories) {
  console.log('Creating recipes...');
  
  for (let i = 0; i < recipes.length; i++) {
    const recipe = recipes[i];
    const categoryIndex = i % categories.length;
    
    try {
      const recipeData = {
        ...recipe,
        recipieCategory: categories[categoryIndex].id
      };
      
      const response = await axios.post(`${API_URL}/recipies`, {
        data: recipeData
      });
      console.log(`‚úÖ Created recipe: ${recipe.title}`);
    } catch (error) {
      console.error(`‚ùå Error creating recipe ${recipe.title}:`, error.response?.data || error.message);
    }
  }
}

async function populateDatabase() {
  try {
    console.log('üöÄ Starting database population...');
    
    // Create categories first
    const createdCategories = await createCategories();
    
    if (createdCategories.length === 0) {
      console.log('‚ùå No categories were created. Stopping.');
      return;
    }
    
    // Create recipes with category associations
    await createRecipes(createdCategories);
    
    console.log('üéâ Database population completed!');
    console.log(`üìä Created ${createdCategories.length} categories and ${recipes.length} recipes`);
    
  } catch (error) {
    console.error('‚ùå Error populating database:', error.message);
  }
}

// Run the script
populateDatabase(); 