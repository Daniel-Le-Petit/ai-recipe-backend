const axios = require('axios');

const API_BASE_URL = 'http://localhost:1338/api';

async function quickTest() {
  console.log('üîç Test rapide de Strapi et base de donn√©es');
  console.log('==========================================');
  
  try {
    // Test 1: V√©rifier si Strapi r√©pond
    console.log('\n1Ô∏è‚É£ Test de r√©ponse Strapi...');
    const response = await axios.get(`${API_BASE_URL}/recipie?populate=*`, {
      timeout: 5000
    });
    
    console.log('‚úÖ Strapi r√©pond correctement');
    console.log(`üìä Nombre de recettes: ${response.data.data?.length || 0}`);
    
    // Test 2: V√©rifier la structure des donn√©es
    if (response.data.data && response.data.data.length > 0) {
      const recipe = response.data.data[0];
      console.log('\n2Ô∏è‚É£ Structure des donn√©es:');
      console.log(`   ID: ${recipe.id}`);
      console.log(`   Titre: ${recipe.attributes?.title || 'Sans titre'}`);
      console.log(`   Statut: ${recipe.attributes?.recipeState || 'Non d√©fini'}`);
      console.log(`   Cr√©√© le: ${recipe.attributes?.createdAt || 'Non d√©fini'}`);
    }
    
    // Test 3: V√©rifier les cat√©gories
    console.log('\n3Ô∏è‚É£ Test des cat√©gories...');
    const categoriesResponse = await axios.get(`${API_BASE_URL}/recipie-categories?populate=*`);
    console.log(`‚úÖ Cat√©gories: ${categoriesResponse.data.data?.length || 0} trouv√©es`);
    
    console.log('\nüéâ Tous les tests sont pass√©s !');
    console.log('‚úÖ Strapi fonctionne correctement');
    console.log('‚úÖ Base de donn√©es accessible');
    console.log('‚úÖ API op√©rationnelle');
    
  } catch (error) {
    console.error('\n‚ùå Erreur d√©tect√©e:');
    
    if (error.code === 'ECONNREFUSED') {
      console.error('   Strapi n\'est pas d√©marr√© ou pas accessible sur le port 1338');
      console.error('\nüîß Solutions:');
      console.error('   1. D√©marrez Strapi: npm run develop');
      console.error('   2. V√©rifiez que le port 1338 est libre');
      console.error('   3. V√©rifiez les logs Strapi pour les erreurs de DB');
    } else if (error.code === 'ETIMEDOUT') {
      console.error('   Timeout - Strapi met trop de temps √† r√©pondre');
      console.error('\nüîß Solutions:');
      console.error('   1. V√©rifiez la connexion √† la base de donn√©es');
      console.error('   2. Red√©marrez Strapi');
      console.error('   3. V√©rifiez les variables d\'environnement');
    } else if (error.response) {
      console.error(`   Erreur HTTP: ${error.response.status} ${error.response.statusText}`);
      console.error('\nüîß Solutions:');
      console.error('   1. V√©rifiez que la base de donn√©es est accessible');
      console.error('   2. V√©rifiez les migrations Strapi');
      console.error('   3. Red√©marrez Strapi');
    } else {
      console.error(`   Erreur: ${error.message}`);
    }
  }
}

quickTest(); 